<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:custom="clr-namespace:SharedApp.Windows.ShSupport"
		>
	<!--  xmlns:custom="clr-namespace:CSToolsStudies.Windows.Support"  -->

	<custom:AddConverter x:Key="AddConverter" />

	<SolidColorBrush x:Key="ScrollBarBkg" Color="#222222" />
	<SolidColorBrush x:Key="ItemsControl.Text.Disabled" Color="{DynamicResource Gray.600}" />
	<SolidColorBrush x:Key="ItemsControl.Subject.Background.Normal" Color="{DynamicResource Blue.450}" />
	<SolidColorBrush x:Key="ItemsControl.Text.Normal" Color="{DynamicResource Gray.950}" />
	<Color x:Key="DisabledForegroundColor">#FF888888</Color>

	<!--
		custom properties

			custom:CsComboBoxAp.ComboBoxBdrRadius="6"

			custom:CsComboBoxAp.DropDownBdrBrush="{StaticResource ItemsControl.ListItem.Background.Normal}"
			custom:CsComboBoxAp.DropDownBdrRadius="4"
			custom:CsComboBoxAp.DropDownBdrThickness="4"

			custom:CsComboBoxAp.DropDownBrushh="{StaticResource ItemsControl.ListItem.Background.Normal}"
			custom:CsComboBoxAp.DropDownMaxWidth="240.0"
			custom:CsComboBoxAp.DropDownWidthAdjustment="0.0"

			custom:CsComboBoxAp.MouseOverBrush="{StaticResource ItemsControl.Subject.Background.MouseOver}"
			custom:CsComboBoxAp.NotEnabledBrush="{StaticResource ItemsControl.Subject.Background.Disabled}"
	-->


	<Style x:Key="CsComboBoxStyle" TargetType="ComboBox">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="Background" Value="{StaticResource ItemsControl.Subject.Background.Normal}" />
		<Setter Property="Foreground" Value="{StaticResource ItemsControl.Text.Normal}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Border x:Name="bdr_cbt1"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							CornerRadius="{TemplateBinding custom:CsComboBoxAp.ComboBoxBdrRadius}"
							Margin="0,0,0,0"
							Padding="4,0,4,0"
							>
						<Border.Style>
							<Style TargetType="Border">
								<Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
								<Style.Triggers>
									<!--  true  -->
									<Trigger Property="IsMouseOver" Value="true">
										<Setter Property="Background" Value="{Binding Path=(custom:CsComboBoxAp.MouseOverBrush), RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</Trigger>
									<Trigger Property="IsEnabled" Value="False">
										<!--  false  -->
										<Setter Property="TextElement.Foreground" Value="{StaticResource ItemsControl.Text.Disabled}" />
										<Setter Property="Background" Value="{Binding Path=(custom:CsComboBoxAp.NotEnabledBrush), RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</Trigger>
								</Style.Triggers>
							</Style>
						</Border.Style>

						<Grid x:Name="cbx_gd1"
								HorizontalAlignment="Stretch"
								Margin="0,0,0,2"
								>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="20" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<ToggleButton x:Name="ToggleButton"
									Grid.Column="0"
									Grid.ColumnSpan="2"
									Background="{TemplateBinding Background}"
									ClickMode="Press"
									Focusable="false"
									IsChecked="{Binding IsDropDownOpen,
																			Mode=TwoWay,
																			RelativeSource={RelativeSource TemplatedParent}}"
									Padding="0"
									>
								<!--  Template="{StaticResource CbxEx1Togg1}"  -->
								<ToggleButton.Template>
									<ControlTemplate TargetType="{x:Type ToggleButton}">
										<Grid Margin="0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="16" />
												<ColumnDefinition />
											</Grid.ColumnDefinitions>

											<!--  needed to create extend the clickable region  -->
											<Border x:Name="Border"
													Grid.Column="0"
													Background="Transparent"
													BorderThickness="1"
													CornerRadius="2"
													/>
											<Border Grid.Column="0"
													Grid.ColumnSpan="2"
													Background="Transparent"
													CornerRadius="2,0,0,2"
													Margin="0"
													Padding="0"
													/>
											<!--  Background="Transparent"  -->
											<Path x:Name="Arrow"
													Grid.Column="0"
													Data="M 0,0 4,8 8,0 z"
													Fill="red"
													HorizontalAlignment="Center"
													Margin="0,1.5,0,0"
													RenderTransformOrigin="0.5,0.5"
													VerticalAlignment="Center"
													>
												<Path.RenderTransform>
													<TransformGroup>
														<RotateTransform Angle="-90" />
													</TransformGroup>
												</Path.RenderTransform>
											</Path>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsChecked" Value="true">
												<Setter Property="Fill"
														TargetName="Arrow"
														Value="OrangeRed"
														/>
												<Setter Property="RenderTransform" TargetName="Arrow">
													<Setter.Value>
														<RotateTransform Angle="0" />
													</Setter.Value>
												</Setter>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>

								</ToggleButton.Template>

							</ToggleButton>

							<ContentPresenter x:Name="ContentSite"
									Content="{TemplateBinding SelectionBoxItem}"
									Grid.Column="1"
									ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
									ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
									HorizontalAlignment="Stretch"
									IsHitTestVisible="False"
									Margin="0,0,0,0"
									VerticalAlignment="Center"
									/>

							<TextBox x:Name="PART_EditableTextBox"
									Grid.Column="1"
									Focusable="True"
									Foreground="{TemplateBinding Foreground}"
									HorizontalAlignment="Stretch"
									IsReadOnly="{TemplateBinding IsReadOnly}"
									Margin="0"
									VerticalAlignment="Stretch"
									VerticalContentAlignment="Center"
									Visibility="Hidden"
									Style="{x:Null}"
									>
								<!--  Template="{StaticResource CbxEx1Tbx1}"  -->
								<TextBox.Template>
									<ControlTemplate TargetType="{x:Type TextBox}">
										<Border x:Name="PART_ContentHost"
												Background="{TemplateBinding Background}"
												Focusable="False"
												/>
									</ControlTemplate>
								</TextBox.Template>

							</TextBox>

							<!--  MinWidth="{TemplateBinding custom:CsComboBoxAttached.DropDownMinWidth}"  -->
							<Popup x:Name="Popup"
									Grid.Column="0"
									Focusable="False"
									HorizontalAlignment="Left"
									HorizontalOffset="0"
									IsOpen="{TemplateBinding IsDropDownOpen}"
									Margin="0"
									MaxWidth="{Binding RelativeSource={RelativeSource TemplatedParent},
																		 Path=(custom:CsComboBoxAp.DropDownMaxWidth)}"
									Placement="Bottom"
									PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
									PopupAnimation="Slide"
									>
								<Popup.MinWidth>
									<MultiBinding Converter="{StaticResource AddConverter}">
										<Binding FallbackValue="0.0"
												Path="ActualWidth"
												RelativeSource="{RelativeSource TemplatedParent}"
												/>
										<Binding FallbackValue="0.0"
												Path="(custom:CsComboBoxAp.DropDownWidthAdjustment)"
												RelativeSource="{RelativeSource TemplatedParent}"
												/>
									</MultiBinding>
								</Popup.MinWidth>

								<!--  Padding="5,5,3,5"  -->
								<Border x:Name="DropDownBorder"
										Background="{Binding Path=(custom:CsComboBoxAp.DropDownBrush),
																				 RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
										BorderBrush="{TemplateBinding custom:CsComboBoxAp.DropDownBdrBrush}"
										BorderThickness="{TemplateBinding custom:CsComboBoxAp.DropDownBdrThickness}"
										CornerRadius="{TemplateBinding custom:CsComboBoxAp.DropDownBdrRadius}"
										HorizontalAlignment="Stretch"
										Margin="0"
										>

									<Grid x:Name="DropDownGrid"
											HorizontalAlignment="Stretch"
											Margin="0"
											MaxHeight="{TemplateBinding MaxDropDownHeight}"
											SnapsToDevicePixels="True"
											>
										<!--  Background="{Binding Path=(custom:CsComboBoxAp.DropDownBrush),  -->
										<!--  RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"  -->

										<ScrollViewer HorizontalScrollBarVisibility="Auto"
												Padding="0,2,4,4"
												SnapsToDevicePixels="True"
												custom:CsScrollBarAp.ScrollBarWidth="{TemplateBinding custom:CsScrollBarAp.ScrollBarWidth}"
												Template="{DynamicResource CsScrollViewerCt}"
												>
											<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
										</ScrollViewer>

									</Grid>
								</Border>
							</Popup>


							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="MouseOver" />
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="EditStates">
									<VisualState x:Name="Editable">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(UIElement.Visibility)">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Visibility)">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Uneditable" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Grid>
					</Border>

					<!-- </Border> -->
					<ControlTemplate.Triggers>

						<Trigger Property="HasItems" Value="false">
							<Setter Property="MinHeight"
									TargetName="DropDownBorder"
									Value="95"
									/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</Trigger>
						<Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
							<Setter Property="CornerRadius"
									TargetName="DropDownBorder"
									Value="4"
									/>
							<Setter Property="Margin"
									TargetName="DropDownBorder"
									Value="0,2,0,0"
									/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>

			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>